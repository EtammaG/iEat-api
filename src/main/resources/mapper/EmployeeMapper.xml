<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.etammag.ieat.mapper.EmployeeMapper">
    <resultMap id="BaseResultMap" type="com.etammag.ieat.entity.Employee">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="sex" jdbcType="VARCHAR" property="sex"/>
        <result column="id_number" jdbcType="VARCHAR" property="idNumber"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="create_user" jdbcType="BIGINT" property="createUser"/>
        <result column="update_user" jdbcType="BIGINT" property="updateUser"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from employee
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.etammag.ieat.entity.Employee">
        insert into employee (id, name, username,
                              password, phone, sex,
                              id_number, status, create_time,
                              update_time, create_user, update_user)
        values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR},
                #{username,jdbcType=VARCHAR},  #{password,jdbcType=VARCHAR},
                #{phone,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR},
                #{idNumber,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},
                #{createTime,jdbcType=TIMESTAMP},  #{updateTime,jdbcType=TIMESTAMP},
                #{createUser,jdbcType=BIGINT}, #{updateUser,jdbcType=BIGINT})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.etammag.ieat.entity.Employee">
        update employee
        set name        = #{name,jdbcType=VARCHAR},
            username    = #{username,jdbcType=VARCHAR},
            password    = #{password,jdbcType=VARCHAR},
            phone       = #{phone,jdbcType=VARCHAR},
            sex         = #{sex,jdbcType=VARCHAR},
            id_number   = #{idNumber,jdbcType=VARCHAR},
            status      = #{status,jdbcType=INTEGER},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            create_user = #{createUser,jdbcType=BIGINT},
            update_user = #{updateUser,jdbcType=BIGINT}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select id, name, username,
               password, phone, sex,
               id_number, status, create_time,
               update_time, create_user, update_user
        from employee
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select id, name, username,
               password, phone, sex,
               id_number, status, create_time,
               update_time, create_user, update_user
        from employee
    </select>
    <select id="selectByUsername" resultMap="BaseResultMap">
      select id, name, username,
             password, phone, sex,
             id_number, status, create_time,
             update_time, create_user, update_user
      from employee
      where username = #{username}
    </select>
    <select id="selectAllByName" resultMap="BaseResultMap">
        select id, name, username,
                password, phone, sex,
                id_number, status, create_time,
                update_time, create_user, update_user
        from employee
        <where>
            <if test="name != null">
                and name like concat('%', #{name}, '%')
            </if>
        </where>
    </select>
    <select id="selectByPhone" resultMap="BaseResultMap">
        select id, name, username,
               password, phone, sex,
               id_number, status, create_time,
               update_time, create_user, update_user
        from employee
        where phone = #{phone}
    </select>
    <select id="selectByIdNumber" resultMap="BaseResultMap">
        select id, name, username,
               password, phone, sex,
               id_number, status, create_time,
               update_time, create_user, update_user
        from employee
        where id_number = #{idNumber}
    </select>
</mapper>